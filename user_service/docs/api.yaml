openapi: 3.0.0
info:
  title: User API
  description: API for user registration and login
  version: 1.0.0
servers:
  - url: https://api.example.com
    description: Main production server
paths:
  /api/register:
    post:
      summary: Register a new user
      description: Registers a new user in the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username for the new user. Should be unique.
                  example: johndoe
                full_name:
                  type: string
                  description: The full name for the new user.
                email:
                  type: string
                  description: The email address of the user. Must be a valid email format.
                  example: johndoe@example.com
                password:
                  type: string
                  description: The password for the new user. Must meet the defined security requirements.
                  example: Pa$$w0rd123
              required:
                - username
                - email
                - password
                - full_name
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User registered successfully.
                  userId:
                    type: string
                    example: 12345
        '400':
          description: Invalid request or missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing required fields
        '409':
          description: Username or email already in use
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Username or email already in use
  /api/token:
    post:
      summary: Authenticate a user
      description: Authenticates a user and returns a token for session management.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the user.
                  example: johndoe
                password:
                  type: string
                  description: The password of the user.
                  example: Pa$$w0rd123
              required:
                - username
                - password
      responses:
        '200':
          description: Login successful, returns token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login successful.
                  token:
                    type: string
                    example: abc123xyz456
                  expiresIn:
                    type: integer
                    example: 3600
        '400':
          description: Invalid request or missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing required fields
        '401':
          description: Incorrect username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Incorrect username or password
  /api/token/verify:
    post:
      summary: Verify a token
      description: Verifies if a given token is valid and has not expired.
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            example: Bearer abc123xyz456
          description: The token to be verified in the format 'Bearer <token>'.
      responses:
        '200':
          description: Token is valid
        '401':
          description: Token is invalid or expired

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: An error occurred

security:
  - BearerAuth: []